{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"colab":{"name":"“3.3. 线性回归的简洁代码实现.ipynb”","provenance":[{"file_id":"https://github.com/d2l-ai/d2l-zh-pytorch-colab/blob/master/chapter_linear-networks/linear-regression-concise.ipynb","timestamp":1631013184061}],"collapsed_sections":[]}},"cells":[{"cell_type":"markdown","metadata":{"id":"pOWHXjb59huC"},"source":["The following additional libraries are needed to run this\n","notebook. Note that running on Colab is experimental, please report a Github\n","issue if you have any problem."]},{"cell_type":"code","metadata":{"id":"RFZrTYPS9huI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631322080909,"user_tz":-480,"elapsed":17465,"user":{"displayName":"xuewen Qin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"02728921575002775664"}},"outputId":"c7bcac48-f733-4fd8-e8e4-9ea8a083bc0f"},"source":["!pip install git+https://github.com/d2l-ai/d2l-zh@release  # installing d2l\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting git+https://github.com/d2l-ai/d2l-zh@release\n","  Cloning https://github.com/d2l-ai/d2l-zh (to revision release) to /tmp/pip-req-build-m8nbt52_\n","  Running command git clone -q https://github.com/d2l-ai/d2l-zh /tmp/pip-req-build-m8nbt52_\n","  Running command git checkout -b release --track origin/release\n","  Switched to a new branch 'release'\n","  Branch 'release' set up to track remote branch 'release' from 'origin'.\n","  Running command git submodule update --init --recursive -q\n","Requirement already satisfied: jupyter in /usr/local/lib/python3.7/dist-packages (from d2l==2.0.0a2) (1.0.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from d2l==2.0.0a2) (1.19.5)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from d2l==2.0.0a2) (3.2.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from d2l==2.0.0a2) (2.23.0)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from d2l==2.0.0a2) (1.1.5)\n","Requirement already satisfied: notebook in /usr/local/lib/python3.7/dist-packages (from jupyter->d2l==2.0.0a2) (5.3.1)\n","Requirement already satisfied: ipykernel in /usr/local/lib/python3.7/dist-packages (from jupyter->d2l==2.0.0a2) (4.10.1)\n","Requirement already satisfied: qtconsole in /usr/local/lib/python3.7/dist-packages (from jupyter->d2l==2.0.0a2) (5.1.1)\n","Requirement already satisfied: jupyter-console in /usr/local/lib/python3.7/dist-packages (from jupyter->d2l==2.0.0a2) (5.2.0)\n","Requirement already satisfied: ipywidgets in /usr/local/lib/python3.7/dist-packages (from jupyter->d2l==2.0.0a2) (7.6.3)\n","Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from jupyter->d2l==2.0.0a2) (5.6.1)\n","Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel->jupyter->d2l==2.0.0a2) (5.3.5)\n","Requirement already satisfied: tornado>=4.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel->jupyter->d2l==2.0.0a2) (5.1.1)\n","Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel->jupyter->d2l==2.0.0a2) (5.5.0)\n","Requirement already satisfied: traitlets>=4.1.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel->jupyter->d2l==2.0.0a2) (5.0.5)\n","Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->jupyter->d2l==2.0.0a2) (1.0.18)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->jupyter->d2l==2.0.0a2) (4.4.2)\n","Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->jupyter->d2l==2.0.0a2) (0.8.1)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->jupyter->d2l==2.0.0a2) (0.7.5)\n","Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->jupyter->d2l==2.0.0a2) (4.8.0)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->jupyter->d2l==2.0.0a2) (2.6.1)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipykernel->jupyter->d2l==2.0.0a2) (57.4.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=4.0.0->ipykernel->jupyter->d2l==2.0.0a2) (0.2.5)\n","Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=4.0.0->ipykernel->jupyter->d2l==2.0.0a2) (1.15.0)\n","Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.7/dist-packages (from traitlets>=4.1.0->ipykernel->jupyter->d2l==2.0.0a2) (0.2.0)\n","Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->jupyter->d2l==2.0.0a2) (5.1.3)\n","Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->jupyter->d2l==2.0.0a2) (1.0.0)\n","Requirement already satisfied: widgetsnbextension~=3.5.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->jupyter->d2l==2.0.0a2) (3.5.1)\n","Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets->jupyter->d2l==2.0.0a2) (2.6.0)\n","Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets->jupyter->d2l==2.0.0a2) (4.7.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from notebook->jupyter->d2l==2.0.0a2) (2.11.3)\n","Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook->jupyter->d2l==2.0.0a2) (0.11.0)\n","Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook->jupyter->d2l==2.0.0a2) (1.8.0)\n","Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel->jupyter->d2l==2.0.0a2) (22.2.1)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel->jupyter->d2l==2.0.0a2) (2.8.2)\n","Requirement already satisfied: ptyprocess in /usr/local/lib/python3.7/dist-packages (from terminado>=0.8.1->notebook->jupyter->d2l==2.0.0a2) (0.7.0)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->notebook->jupyter->d2l==2.0.0a2) (2.0.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->d2l==2.0.0a2) (1.3.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->d2l==2.0.0a2) (2.4.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->d2l==2.0.0a2) (0.10.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->d2l==2.0.0a2) (0.7.1)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->d2l==2.0.0a2) (0.8.4)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->d2l==2.0.0a2) (4.0.0)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->d2l==2.0.0a2) (1.4.3)\n","Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->d2l==2.0.0a2) (0.5.0)\n","Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert->jupyter->d2l==2.0.0a2) (0.3)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->jupyter->d2l==2.0.0a2) (0.5.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->jupyter->d2l==2.0.0a2) (21.0)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas->d2l==2.0.0a2) (2018.9)\n","Requirement already satisfied: qtpy in /usr/local/lib/python3.7/dist-packages (from qtconsole->jupyter->d2l==2.0.0a2) (1.10.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->d2l==2.0.0a2) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->d2l==2.0.0a2) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->d2l==2.0.0a2) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->d2l==2.0.0a2) (2021.5.30)\n","Building wheels for collected packages: d2l\n","  Building wheel for d2l (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for d2l: filename=d2l-2.0.0a2-py3-none-any.whl size=81714 sha256=ecb3b225f3156b87b3013fe43e1646ac63cdb9a1efec53339e8ee67d772fd5d2\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-gbwxti3x/wheels/73/f4/42/d2b85ca46d85a241d6aa57c1c24027de2d2258202bb67945f9\n","Successfully built d2l\n","Installing collected packages: d2l\n","Successfully installed d2l-2.0.0a2\n"]}]},{"cell_type":"markdown","metadata":{"origin_pos":0,"id":"NOJufToS9huK"},"source":["# 线性回归的简洁实现\n"]},{"cell_type":"code","metadata":{"origin_pos":2,"tab":["pytorch"],"id":"gJ55SkLK9huL"},"source":["import numpy as np\n","import torch\n","from torch.utils import data\n","from d2l import torch as d2l\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"origin_pos":4,"tab":["pytorch"],"id":"R_7L4Ouq9huL"},"source":["true_w = torch.tensor([2, -3.4])\n","true_b = 4.2\n","features, labels = d2l.synthetic_data(true_w, true_b, 1000)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"origin_pos":5,"id":"4HLygQDk9huM"},"source":["## 读取数据集\n","\n","[**调用框架中现有的API来读取数据**]。"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PTo2xSnpauWa","executionInfo":{"status":"ok","timestamp":1631322899153,"user_tz":-480,"elapsed":324,"user":{"displayName":"xuewen Qin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"02728921575002775664"}},"outputId":"583cb258-9f74-4198-cd1d-4774e4363a2e"},"source":["labels.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([1000, 1])"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","metadata":{"origin_pos":7,"tab":["pytorch"],"id":"HuStKuGS9huM"},"source":["def load_array(data_arrays, batch_size, is_train=True):  #@save\n","    \"\"\"构造一个PyTorch数据迭代器。\"\"\"\n","    # print(*data_arrays)\n","    # https://blog.csdn.net/qq_40211493/article/details/107529148\n","    # TensorDataset 可以用来对 tensor 进行打包，就好像 python 中的 zip 功能。该类通过每一个 tensor 的第一个维度进行索引。因此，该类中的 tensor 第一维度必须相等。\n","    dataset = data.TensorDataset(*data_arrays)\n","    # 传入数据，批量大小，是否打乱数据\n","    return data.DataLoader(dataset, batch_size, shuffle=is_train)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"origin_pos":9,"tab":["pytorch"],"id":"zPYcaeM_9huN"},"source":["batch_size = 10\n","data_iter = load_array((features, labels), batch_size)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"origin_pos":10,"id":"cEk7FQSI9huO"},"source":["读取并打印第一个小批量样本，我们使用`iter`构造Python迭代器，并使用`next`从迭代器中获取第一项。\n"]},{"cell_type":"code","metadata":{"id":"jp9xtxCZY6cm"},"source":["# https://www.cnblogs.com/ranjiewen/p/10128046.html\n","# for epoch in range(batch_size):\n","#     for img, label in data_iter:\n","#       print(img)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NFpR0FZVYnyx","executionInfo":{"status":"ok","timestamp":1631323095372,"user_tz":-480,"elapsed":5,"user":{"displayName":"xuewen Qin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"02728921575002775664"}},"outputId":"6e16c0d8-0337-4c4e-ad81-9bcf1417aba1"},"source":["data_iter"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<torch.utils.data.dataloader.DataLoader at 0x7f742b80c490>"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","metadata":{"origin_pos":11,"tab":["pytorch"],"id":"7jntccVw9huP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631323095372,"user_tz":-480,"elapsed":3,"user":{"displayName":"xuewen Qin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"02728921575002775664"}},"outputId":"34c8a159-962e-4e1b-f988-5edfe12109d1"},"source":["# 通过next函数，得到一个X,y\n","next(iter(data_iter))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[tensor([[-1.4385,  0.0824],\n","         [-1.9882,  0.7597],\n","         [ 1.0919, -0.0999],\n","         [ 2.3678,  1.7253],\n","         [-0.6232,  0.2228],\n","         [ 0.2000, -0.6753],\n","         [ 0.3997, -0.4003],\n","         [ 0.3096, -1.2019],\n","         [ 0.9356,  0.1066],\n","         [-1.0326, -1.1969]]), tensor([[ 1.0361],\n","         [-2.3763],\n","         [ 6.7365],\n","         [ 3.0661],\n","         [ 2.2045],\n","         [ 6.9088],\n","         [ 6.3379],\n","         [ 8.9056],\n","         [ 5.7082],\n","         [ 6.2007]])]"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","metadata":{"origin_pos":12,"id":"wC4BSW4C9huQ"},"source":["## 定义模型\n","\n","\n"]},{"cell_type":"markdown","metadata":{"origin_pos":14,"tab":["pytorch"],"id":"dhzjuCxk9huQ"},"source":["在PyTorch中，全连接层在`Linear`类中定义。值得注意的是，我们将两个参数传递到`nn.Linear`中。第一个指定输入特征形状，即2，第二个指定输出特征形状，输出特征形状为单个标量，因此为1。\n"]},{"cell_type":"code","metadata":{"origin_pos":17,"tab":["pytorch"],"id":"qFTsD4lM9huQ"},"source":["# `nn` 是神经网络的缩写\n","from torch import nn\n","# 对于线性回归，只需指定输入维度跟输出维度\n","# Sequential其实就相当于一个list，将各个层按顺序放在一起\n","net = nn.Sequential(nn.Linear(2, 1))\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"origin_pos":19,"id":"Hx2QlH4B9huR"},"source":["## (**初始化模型参数**)"]},{"cell_type":"markdown","metadata":{"origin_pos":21,"tab":["pytorch"],"id":"WNbuLhlB9huR"},"source":["正如我们在构造`nn.Linear`时指定输入和输出尺寸一样。现在我们直接访问参数以设定初始值。我们通过`net[0]`选择网络中的第一个图层，然后使用`weight.data`和`bias.data`方法访问参数。然后使用替换方法`normal_`和`fill_`来重写参数值。\n"]},{"cell_type":"code","metadata":{"id":"3I_THVW_gU6r"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"origin_pos":24,"tab":["pytorch"],"id":"26PNvNFf9huR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631324505924,"user_tz":-480,"elapsed":10,"user":{"displayName":"xuewen Qin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"02728921575002775664"}},"outputId":"10bdb510-351b-45df-fd0b-02c595a4b1da"},"source":["# 网络.权重.真是数值.使用均值为0，方差为0.01替换\n","# 对卷积层和批归一层权重进行初始化，也就是weight和bias。\n","net[0].weight.data.normal_(0, 0.01)\n","net[0].bias.data.fill_(0)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([0.])"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","metadata":{"origin_pos":27,"tab":["pytorch"],"id":"iWLIKv9O9huS"},"source":["\n"]},{"cell_type":"markdown","metadata":{"origin_pos":29,"id":"yuykE9c49huS"},"source":["## 定义损失函数\n"]},{"cell_type":"markdown","metadata":{"origin_pos":31,"tab":["pytorch"],"id":"RVNMq_N49huS"},"source":["[**计算均方误差使用的是`MSELoss`类，也称为平方$L_2$范数**]。默认情况下，它返回所有样本损失的平均值。\n"]},{"cell_type":"code","metadata":{"origin_pos":34,"tab":["pytorch"],"id":"iq7c7y2g9huS"},"source":["loss = nn.MSELoss()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"origin_pos":36,"id":"0f6p8sIw9huT"},"source":["## 定义优化算法\n"]},{"cell_type":"markdown","metadata":{"origin_pos":38,"tab":["pytorch"],"id":"6tCKJqif9huT"},"source":["小批量随机梯度下降算法是一种优化神经网络的标准工具"]},{"cell_type":"code","metadata":{"origin_pos":41,"tab":["pytorch"],"id":"lBUA-7el9huT"},"source":["# 传入所有参数\n","trainer = torch.optim.SGD(net.parameters(), lr=0.03)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"origin_pos":43,"id":"-PFVqnmR9huT"},"source":["## 训练\n","\n","\n","对于每一个小批量，我们会进行以下步骤:\n","\n","* 通过调用`net(X)`生成预测并计算损失`l`（正向传播）。\n","* 通过进行反向传播来计算梯度。\n","* 通过调用优化器来更新模型参数。\n","\n","为了更好的衡量训练效果，我们计算每个迭代周期后的损失，并打印它来监控训练过程。\n"]},{"cell_type":"code","metadata":{"origin_pos":45,"tab":["pytorch"],"id":"x_4RB1Kd9huU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631324512078,"user_tz":-480,"elapsed":336,"user":{"displayName":"xuewen Qin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"02728921575002775664"}},"outputId":"4e5e5aea-2bf5-4cb3-e3be-e1dd43111e53"},"source":["num_epochs = 3\n","for epoch in range(num_epochs):\n","    # 拿出小批量\n","    for X, y in data_iter:\n","        l = loss(net(X) ,y)\n","        trainer.zero_grad()\n","        l.backward()\n","        # 进行模型更新\n","        trainer.step()\n","    l = loss(net(features), labels)\n","    print(f'epoch {epoch + 1}, loss {l:f}')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["epoch 1, loss 0.000211\n","epoch 2, loss 0.000099\n","epoch 3, loss 0.000100\n"]}]},{"cell_type":"markdown","metadata":{"origin_pos":47,"id":"nGeX1OZp9huU"},"source":["下面我们[**比较生成数据集的真实参数和通过有限数据训练获得的模型参数**]。\n","要访问参数，我们首先从`net`访问所需的层，然后读取该层的权重和偏置。\n","正如在从零开始实现中一样，我们估计得到的参数与生成数据的真实参数非常接近。\n"]},{"cell_type":"code","metadata":{"origin_pos":49,"tab":["pytorch"],"id":"MPjehu8n9huU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631324515239,"user_tz":-480,"elapsed":355,"user":{"displayName":"xuewen Qin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"02728921575002775664"}},"outputId":"e1ff5ce0-6e1f-4263-f3d8-c765cf909bec"},"source":["w = net[0].weight.data\n","print('w的估计误差：', true_w - w.reshape(true_w.shape))\n","b = net[0].bias.data\n","print('b的估计误差：', true_b - b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["w的估计误差： tensor([ 4.4405e-04, -5.6267e-05])\n","b的估计误差： tensor([0.0002])\n"]}]},{"cell_type":"markdown","metadata":{"origin_pos":53,"tab":["pytorch"],"id":"i-mjyysi9huU"},"source":["* 我们可以使用PyTorch的高级API更简洁地实现模型。\n","* 在PyTorch中，`data`模块提供了数据处理工具，`nn`模块定义了大量的神经网络层和常见损失函数。\n","* 我们可以通过`_`结尾的方法将参数替换，从而初始化参数。\n"]}]}